{"id":"main.js","dependencies":[{"name":"/Users/bmworld/git/fastcampus/fc_javascript/package.json","includedInParent":true,"mtime":1645544694492},{"name":"./prototype","loc":{"line":1,"column":28},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/prototype.js"},{"name":"./this","loc":{"line":2,"column":23},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/this.js"},{"name":"./class","loc":{"line":3,"column":24},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/class.js"},{"name":"./dataType_number","loc":{"line":4,"column":30},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/dataType_number.js"},{"name":"./array","loc":{"line":5,"column":24},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/array.js"}],"generated":{"js":"\"use strict\";\n\nvar _prototype = _interopRequireDefault(require(\"./prototype\"));\n\nvar _this = _interopRequireDefault(require(\"./this\"));\n\nvar _class = _interopRequireDefault(require(\"./class\"));\n\nvar _dataType_number = _interopRequireDefault(require(\"./dataType_number\"));\n\nvar _array = _interopRequireDefault(require(\"./array\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":5,"column":0}}],"sources":{"main.js":"import study_prototype from './prototype';\nimport study_this from './this';\nimport study_class from './class';\nimport study_Type_number from './dataType_number';\nimport study_array from './array';\n// import getType from './getType';\n\n// console.log(getType(1234));\n// console.log(getType(false));\n// console.log(getType(null));\n// console.log(getType({}));\n// console.log(getType([]));\n\n\n\n\n\n// // 산술 연산자 (arithmetic operator)\n\n// console.log(1 + 2)\n// console.log(5 - 7)\n// console.log(3 * 3)\n// console.log(10 / 2 )\n// console.log(7 % 2 )\n\n\n// // 할당 연산자 (assignment operator)\n// let a = 2\n// a -= 1; // a = a - 1\n// console.log(a);\n// a += 1; // a = a + 1\n// console.log(a);\n\n\n\n// // 비교 연산자 (comparison operator)\n\n// const c = 1;\n// const d = 3;\n// console.log(c === d);\n// console.log(c !== d);\n// console.log(c < d);\n\n\n\n// // 논리 연산자 (logical operator)\n\n// const e = 1 === 1;\n// const f = 'AB' === 'AB';\n// const g = true;\n\n// console.log(e);\n// console.log(f);\n// console.log(g);\n\n\n\n// console.log('&&: ', e && f && g);\n// console.log('||: ', e || f);\n\n\n\n\n\n// import random from './getRandom';\n\n// // 조건문 (if Statement)\n\n// const a = random();\n\n\n// switch(a){\n//   case 0:\n//     console.log('a is 0');\n//     break; // break를 안 걸었을 경우, 아래의 명령문이 실행됨.\n//   case 2:\n//     console.log('a is 2');\n//     break;\n//   case 4:\n//     console.log('a is 4');\n//     break;\n\n//   default:\n//     console.log('rest...') // else의 나머지 조건에 해당하는 거다. break문 필요없음.\n// }\n\n\n// if( a === 0 ){\n//   console.log('a is 0');\n// } else if ( a === 2) {\n//   console.log('a is 2');\n// } else if ( a === 4) {\n//   console.log('a is 4');\n// } else {\n//   console.log('rest..')\n// }\n\n\n\n// const ulElem = document.querySelector('ul');\n\n// for( let i =0; i < 3; i += 1){\n//   const li = document.createElement('li');\n//   li.textContent = `list-${i + 10}`;\n//   ulElem.appendChild(li);\n\n// }\n\n\n// 변수 유효범위 (Variable Scrope)\n// 함수레벨: var\n// 블록레벨: let, const\n\n// function scope(){\n  \n//   if (true){\n//     var a = 123;\n//     console.log(a);\n//   }\n \n// }\n\n\n// scope();\n\n\n\n\n// 화살표함수\n\n// const doubleArrow = x => {x * 2}; // 중괄호를 사용할 경우에, return 키워드를 사용해야 반환된다.\n// const doubleArrow = x => x * 2; //  화살표함수는, 중괄호가 없을 경우, 값반환을 기본적으로 한다.\n// console.log('doubleArrow: ', doubleArrow(7));\n// const doubleArrow2 = x => ({\n//   name: 'bmworld',\n//   age: '33',\n//   value: x*7\n// }); //  화살표함수는, 중괄호가 없을 경우, 값반환을 기본적으로 한다.\n// console.log('doubleArrow: 화살표함수는 객체를 반환할 때는 소괄호기호를 사용하면 된다. ', doubleArrow2(7));\n\n\n\n\n\n\n\n\n\n/// 기본함수\n\n// const k = 7;\n// function double(){\n//   console.log( k * 2);\n\n// }\n\n// double();\n\n\n\n\n\n// 즉시 실행함수\n\n\n// (function(){\n//   console.log(k * 3);\n// })();\n\n\n\n\n// 호이스팅 (Hoisting)\n// 함수 선언부가 유효범위 최상단으로 끌어올려지는 현상\n\n\n\n// 콜백 (Callback)\n// 함수의 '인수'로 사용되는 함수\n\n// function timeout(callback) {\n//   setTimeout(()=>{\n//     console.log('bmworld!');\n//     callback();\n//   },1000);\n// }\n\n// timeout(()=>{\n//   console.log('callback done!')\n  \n// });\n\n\n"},"lineCount":null}},"error":null,"hash":"a262477593e3665e619f754620cc825a","cacheData":{"env":{}}}