{"id":"main.js","dependencies":[{"name":"/Users/bmworld/git/fastcampus/fc_javascript/package.json","includedInParent":true,"mtime":1645544694492},{"name":"./prototype","loc":{"line":1,"column":28},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/prototype.js"},{"name":"./this","loc":{"line":2,"column":23},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/this.js"},{"name":"./class","loc":{"line":3,"column":24},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/class.js"},{"name":"./dataType_number","loc":{"line":4,"column":30},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/dataType_number.js"},{"name":"./array","loc":{"line":5,"column":24},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/array.js"},{"name":"./getType","loc":{"line":6,"column":20},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/getType.js"},{"name":"./getRandom","loc":{"line":8,"column":19},"parent":"/Users/bmworld/git/fastcampus/fc_javascript/main.js","resolved":"/Users/bmworld/git/fastcampus/fc_javascript/getRandom.js"}],"generated":{"js":"\"use strict\";\n\nvar _prototype = _interopRequireDefault(require(\"./prototype\"));\n\nvar _this = _interopRequireDefault(require(\"./this\"));\n\nvar _class = _interopRequireDefault(require(\"./class\"));\n\nvar _dataType_number = _interopRequireDefault(require(\"./dataType_number\"));\n\nvar _array = _interopRequireDefault(require(\"./array\"));\n\nvar _getType = _interopRequireDefault(require(\"./getType\"));\n\nvar R = _interopRequireWildcard(require(\"./getRandom\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import {random , user as customImportName } from './getRandom';\nconsole.log(R); // console.log(getType(1234));\n// console.lo g(getType(false));\n// console.log(getType(null));\n// console.log(getType({}));\n// console.log(getType([]));\n// // 산술 연산자 (arithmetic operator)\n// console.log(1 + 2)\n// console.log(5 - 7)\n// console.log(3 * 3)\n// console.log(10 / 2 )\n// console.log(7 % 2 )\n// // 할당 연산자 (assignment operator)\n// let a = 2\n// a -= 1; // a = a - 1\n// console.log(a);\n// a += 1; // a = a + 1\n// console.log(a);\n// // 비교 연산자 (comparison operator)\n// const c = 1;\n// const d = 3;\n// console.log(c === d);\n// console.log(c !== d);\n// console.log(c < d);\n// // 논리 연산자 (logical operator)\n// const e = 1 === 1;\n// const f = 'AB' === 'AB';\n// const g = true;\n// console.log(e);\n// console.log(f);\n// console.log(g);\n// console.log('&&: ', e && f && g);\n// console.log('||: ', e || f);\n// import random from './getRandom';\n// // 조건문 (if Statement)\n// const a = random();\n// switch(a){\n//   case 0:\n//     console.log('a is 0');\n//     break; // break를 안 걸었을 경우, 아래의 명령문이 실행됨.\n//   case 2:\n//     console.log('a is 2');\n//     break;\n//   case 4:\n//     console.log('a is 4');\n//     break;\n//   default:\n//     console.log('rest...') // else의 나머지 조건에 해당하는 거다. break문 필요없음.\n// }\n// if( a === 0 ){\n//   console.log('a is 0');\n// } else if ( a === 2) {\n//   console.log('a is 2');\n// } else if ( a === 4) {\n//   console.log('a is 4');\n// } else {\n//   console.log('rest..')\n// }\n// const ulElem = document.querySelector('ul');\n// for( let i =0; i < 3; i += 1){\n//   const li = document.createElement('li');\n//   li.textContent = `list-${i + 10}`;\n//   ulElem.appendChild(li);\n// }\n// 변수 유효범위 (Variable Scrope)\n// 함수레벨: var\n// 블록레벨: let, const\n// function scope(){\n//   if (true){\n//     var a = 123;\n//     console.log(a);\n//   }\n// }\n// scope();\n// 화살표함수\n// const doubleArrow = x => {x * 2}; // 중괄호를 사용할 경우에, return 키워드를 사용해야 반환된다.\n// const doubleArrow = x => x * 2; //  화살표함수는, 중괄호가 없을 경우, 값반환을 기본적으로 한다.\n// console.log('doubleArrow: ', doubleArrow(7));\n// const doubleArrow2 = x => ({\n//   name: 'bmworld',\n//   age: '33',\n//   value: x*7\n// }); //  화살표함수는, 중괄호가 없을 경우, 값반환을 기본적으로 한다.\n// console.log('doubleArrow: 화살표함수는 객체를 반환할 때는 소괄호기호를 사용하면 된다. ', doubleArrow2(7));\n/// 기본함수\n// const k = 7;\n// function double(){\n//   console.log( k * 2);\n// }\n// double();\n// 즉시 실행함수\n// (function(){\n//   console.log(k * 3);\n// })();\n// 호이스팅 (Hoisting)\n// 함수 선언부가 유효범위 최상단으로 끌어올려지는 현상\n// 콜백 (Callback)\n// 함수의 '인수'로 사용되는 함수\n// function timeout(callback) {\n//   setTimeout(()=>{\n//     console.log('bmworld!');\n//     callback();\n//   },1000);\n// }\n// timeout(()=>{\n//   console.log('callback done!')\n// });\n/////\n// console.log(random());"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"name":"console","generated":{"line":24,"column":0},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":24,"column":7},"source":"main.js","original":{"line":10,"column":7}},{"name":"log","generated":{"line":24,"column":8},"source":"main.js","original":{"line":10,"column":8}},{"generated":{"line":24,"column":11},"source":"main.js","original":{"line":10,"column":0}},{"name":"R","generated":{"line":24,"column":12},"source":"main.js","original":{"line":10,"column":12}},{"generated":{"line":24,"column":13},"source":"main.js","original":{"line":10,"column":0}},{"generated":{"line":24,"column":16},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":22,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"main.js","original":{"line":31,"column":0}},{"generated":{"line":36,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":37,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":38,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"generated":{"line":39,"column":0},"source":"main.js","original":{"line":35,"column":0}},{"generated":{"line":40,"column":0},"source":"main.js","original":{"line":36,"column":0}},{"generated":{"line":41,"column":0},"source":"main.js","original":{"line":40,"column":0}},{"generated":{"line":42,"column":0},"source":"main.js","original":{"line":42,"column":0}},{"generated":{"line":43,"column":0},"source":"main.js","original":{"line":43,"column":0}},{"generated":{"line":44,"column":0},"source":"main.js","original":{"line":44,"column":0}},{"generated":{"line":45,"column":0},"source":"main.js","original":{"line":45,"column":0}},{"generated":{"line":46,"column":0},"source":"main.js","original":{"line":46,"column":0}},{"generated":{"line":47,"column":0},"source":"main.js","original":{"line":50,"column":0}},{"generated":{"line":48,"column":0},"source":"main.js","original":{"line":52,"column":0}},{"generated":{"line":49,"column":0},"source":"main.js","original":{"line":53,"column":0}},{"generated":{"line":50,"column":0},"source":"main.js","original":{"line":54,"column":0}},{"generated":{"line":51,"column":0},"source":"main.js","original":{"line":56,"column":0}},{"generated":{"line":52,"column":0},"source":"main.js","original":{"line":57,"column":0}},{"generated":{"line":53,"column":0},"source":"main.js","original":{"line":58,"column":0}},{"generated":{"line":54,"column":0},"source":"main.js","original":{"line":62,"column":0}},{"generated":{"line":55,"column":0},"source":"main.js","original":{"line":63,"column":0}},{"generated":{"line":56,"column":0},"source":"main.js","original":{"line":69,"column":0}},{"generated":{"line":57,"column":0},"source":"main.js","original":{"line":71,"column":0}},{"generated":{"line":58,"column":0},"source":"main.js","original":{"line":73,"column":0}},{"generated":{"line":59,"column":0},"source":"main.js","original":{"line":76,"column":0}},{"generated":{"line":60,"column":0},"source":"main.js","original":{"line":77,"column":0}},{"generated":{"line":61,"column":0},"source":"main.js","original":{"line":78,"column":0}},{"generated":{"line":62,"column":0},"source":"main.js","original":{"line":79,"column":0}},{"generated":{"line":63,"column":0},"source":"main.js","original":{"line":80,"column":0}},{"generated":{"line":64,"column":0},"source":"main.js","original":{"line":81,"column":0}},{"generated":{"line":65,"column":0},"source":"main.js","original":{"line":82,"column":0}},{"generated":{"line":66,"column":0},"source":"main.js","original":{"line":83,"column":0}},{"generated":{"line":67,"column":0},"source":"main.js","original":{"line":84,"column":0}},{"generated":{"line":68,"column":0},"source":"main.js","original":{"line":85,"column":0}},{"generated":{"line":69,"column":0},"source":"main.js","original":{"line":87,"column":0}},{"generated":{"line":70,"column":0},"source":"main.js","original":{"line":88,"column":0}},{"generated":{"line":71,"column":0},"source":"main.js","original":{"line":89,"column":0}},{"generated":{"line":72,"column":0},"source":"main.js","original":{"line":92,"column":0}},{"generated":{"line":73,"column":0},"source":"main.js","original":{"line":93,"column":0}},{"generated":{"line":74,"column":0},"source":"main.js","original":{"line":94,"column":0}},{"generated":{"line":75,"column":0},"source":"main.js","original":{"line":95,"column":0}},{"generated":{"line":76,"column":0},"source":"main.js","original":{"line":96,"column":0}},{"generated":{"line":77,"column":0},"source":"main.js","original":{"line":97,"column":0}},{"generated":{"line":78,"column":0},"source":"main.js","original":{"line":98,"column":0}},{"generated":{"line":79,"column":0},"source":"main.js","original":{"line":99,"column":0}},{"generated":{"line":80,"column":0},"source":"main.js","original":{"line":100,"column":0}},{"generated":{"line":81,"column":0},"source":"main.js","original":{"line":104,"column":0}},{"generated":{"line":82,"column":0},"source":"main.js","original":{"line":106,"column":0}},{"generated":{"line":83,"column":0},"source":"main.js","original":{"line":107,"column":0}},{"generated":{"line":84,"column":0},"source":"main.js","original":{"line":108,"column":0}},{"generated":{"line":85,"column":0},"source":"main.js","original":{"line":109,"column":0}},{"generated":{"line":86,"column":0},"source":"main.js","original":{"line":111,"column":0}},{"generated":{"line":87,"column":0},"source":"main.js","original":{"line":114,"column":0}},{"generated":{"line":88,"column":0},"source":"main.js","original":{"line":115,"column":0}},{"generated":{"line":89,"column":0},"source":"main.js","original":{"line":116,"column":0}},{"generated":{"line":90,"column":0},"source":"main.js","original":{"line":118,"column":0}},{"generated":{"line":91,"column":0},"source":"main.js","original":{"line":120,"column":0}},{"generated":{"line":92,"column":0},"source":"main.js","original":{"line":121,"column":0}},{"generated":{"line":93,"column":0},"source":"main.js","original":{"line":122,"column":0}},{"generated":{"line":94,"column":0},"source":"main.js","original":{"line":123,"column":0}},{"generated":{"line":95,"column":0},"source":"main.js","original":{"line":125,"column":0}},{"generated":{"line":96,"column":0},"source":"main.js","original":{"line":128,"column":0}},{"generated":{"line":97,"column":0},"source":"main.js","original":{"line":133,"column":0}},{"generated":{"line":98,"column":0},"source":"main.js","original":{"line":135,"column":0}},{"generated":{"line":99,"column":0},"source":"main.js","original":{"line":136,"column":0}},{"generated":{"line":100,"column":0},"source":"main.js","original":{"line":137,"column":0}},{"generated":{"line":101,"column":0},"source":"main.js","original":{"line":138,"column":0}},{"generated":{"line":102,"column":0},"source":"main.js","original":{"line":139,"column":0}},{"generated":{"line":103,"column":0},"source":"main.js","original":{"line":140,"column":0}},{"generated":{"line":104,"column":0},"source":"main.js","original":{"line":141,"column":0}},{"generated":{"line":105,"column":0},"source":"main.js","original":{"line":142,"column":0}},{"generated":{"line":106,"column":0},"source":"main.js","original":{"line":143,"column":0}},{"generated":{"line":107,"column":0},"source":"main.js","original":{"line":153,"column":0}},{"generated":{"line":108,"column":0},"source":"main.js","original":{"line":155,"column":0}},{"generated":{"line":109,"column":0},"source":"main.js","original":{"line":156,"column":0}},{"generated":{"line":110,"column":0},"source":"main.js","original":{"line":157,"column":0}},{"generated":{"line":111,"column":0},"source":"main.js","original":{"line":159,"column":0}},{"generated":{"line":112,"column":0},"source":"main.js","original":{"line":161,"column":0}},{"generated":{"line":113,"column":0},"source":"main.js","original":{"line":167,"column":0}},{"generated":{"line":114,"column":0},"source":"main.js","original":{"line":170,"column":0}},{"generated":{"line":115,"column":0},"source":"main.js","original":{"line":171,"column":0}},{"generated":{"line":116,"column":0},"source":"main.js","original":{"line":172,"column":0}},{"generated":{"line":117,"column":0},"source":"main.js","original":{"line":177,"column":0}},{"generated":{"line":118,"column":0},"source":"main.js","original":{"line":178,"column":0}},{"generated":{"line":119,"column":0},"source":"main.js","original":{"line":182,"column":0}},{"generated":{"line":120,"column":0},"source":"main.js","original":{"line":183,"column":0}},{"generated":{"line":121,"column":0},"source":"main.js","original":{"line":185,"column":0}},{"generated":{"line":122,"column":0},"source":"main.js","original":{"line":186,"column":0}},{"generated":{"line":123,"column":0},"source":"main.js","original":{"line":187,"column":0}},{"generated":{"line":124,"column":0},"source":"main.js","original":{"line":188,"column":0}},{"generated":{"line":125,"column":0},"source":"main.js","original":{"line":189,"column":0}},{"generated":{"line":126,"column":0},"source":"main.js","original":{"line":190,"column":0}},{"generated":{"line":127,"column":0},"source":"main.js","original":{"line":192,"column":0}},{"generated":{"line":128,"column":0},"source":"main.js","original":{"line":193,"column":0}},{"generated":{"line":129,"column":0},"source":"main.js","original":{"line":195,"column":0}},{"generated":{"line":130,"column":0},"source":"main.js","original":{"line":199,"column":0}},{"generated":{"line":131,"column":0},"source":"main.js","original":{"line":201,"column":0}}],"sources":{"main.js":"import study_prototype from './prototype';\nimport study_this from './this';\nimport study_class from './class';\nimport study_Type_number from './dataType_number';\nimport study_array from './array';\nimport getType from './getType';\n// import {random , user as customImportName } from './getRandom';\nimport * as R from './getRandom';\n\nconsole.log(R);\n\n// console.log(getType(1234));\n// console.lo g(getType(false));\n// console.log(getType(null));\n// console.log(getType({}));\n// console.log(getType([]));\n\n\n\n\n\n// // 산술 연산자 (arithmetic operator)\n\n// console.log(1 + 2)\n// console.log(5 - 7)\n// console.log(3 * 3)\n// console.log(10 / 2 )\n// console.log(7 % 2 )\n\n\n// // 할당 연산자 (assignment operator)\n// let a = 2\n// a -= 1; // a = a - 1\n// console.log(a);\n// a += 1; // a = a + 1\n// console.log(a);\n\n\n\n// // 비교 연산자 (comparison operator)\n\n// const c = 1;\n// const d = 3;\n// console.log(c === d);\n// console.log(c !== d);\n// console.log(c < d);\n\n\n\n// // 논리 연산자 (logical operator)\n\n// const e = 1 === 1;\n// const f = 'AB' === 'AB';\n// const g = true;\n\n// console.log(e);\n// console.log(f);\n// console.log(g);\n\n\n\n// console.log('&&: ', e && f && g);\n// console.log('||: ', e || f);\n\n\n\n\n\n// import random from './getRandom';\n\n// // 조건문 (if Statement)\n\n// const a = random();\n\n\n// switch(a){\n//   case 0:\n//     console.log('a is 0');\n//     break; // break를 안 걸었을 경우, 아래의 명령문이 실행됨.\n//   case 2:\n//     console.log('a is 2');\n//     break;\n//   case 4:\n//     console.log('a is 4');\n//     break;\n\n//   default:\n//     console.log('rest...') // else의 나머지 조건에 해당하는 거다. break문 필요없음.\n// }\n\n\n// if( a === 0 ){\n//   console.log('a is 0');\n// } else if ( a === 2) {\n//   console.log('a is 2');\n// } else if ( a === 4) {\n//   console.log('a is 4');\n// } else {\n//   console.log('rest..')\n// }\n\n\n\n// const ulElem = document.querySelector('ul');\n\n// for( let i =0; i < 3; i += 1){\n//   const li = document.createElement('li');\n//   li.textContent = `list-${i + 10}`;\n//   ulElem.appendChild(li);\n\n// }\n\n\n// 변수 유효범위 (Variable Scrope)\n// 함수레벨: var\n// 블록레벨: let, const\n\n// function scope(){\n  \n//   if (true){\n//     var a = 123;\n//     console.log(a);\n//   }\n \n// }\n\n\n// scope();\n\n\n\n\n// 화살표함수\n\n// const doubleArrow = x => {x * 2}; // 중괄호를 사용할 경우에, return 키워드를 사용해야 반환된다.\n// const doubleArrow = x => x * 2; //  화살표함수는, 중괄호가 없을 경우, 값반환을 기본적으로 한다.\n// console.log('doubleArrow: ', doubleArrow(7));\n// const doubleArrow2 = x => ({\n//   name: 'bmworld',\n//   age: '33',\n//   value: x*7\n// }); //  화살표함수는, 중괄호가 없을 경우, 값반환을 기본적으로 한다.\n// console.log('doubleArrow: 화살표함수는 객체를 반환할 때는 소괄호기호를 사용하면 된다. ', doubleArrow2(7));\n\n\n\n\n\n\n\n\n\n/// 기본함수\n\n// const k = 7;\n// function double(){\n//   console.log( k * 2);\n\n// }\n\n// double();\n\n\n\n\n\n// 즉시 실행함수\n\n\n// (function(){\n//   console.log(k * 3);\n// })();\n\n\n\n\n// 호이스팅 (Hoisting)\n// 함수 선언부가 유효범위 최상단으로 끌어올려지는 현상\n\n\n\n// 콜백 (Callback)\n// 함수의 '인수'로 사용되는 함수\n\n// function timeout(callback) {\n//   setTimeout(()=>{\n//     console.log('bmworld!');\n//     callback();\n//   },1000);\n// }\n\n// timeout(()=>{\n//   console.log('callback done!')\n  \n// });\n\n\n\n/////\n\n// console.log(random());"},"lineCount":null}},"error":null,"hash":"22c0987d3a7c9c4ea503f3bcf2652ad2","cacheData":{"env":{}}}